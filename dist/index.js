(()=>{"use strict";var e={156:function(e,s,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0});const o=r(t(252)),n=t(755),a=(0,o.default)(),i=process.env.PORT||3e3,c=new n.UserService;a.use(o.default.json()),a.get("/",(e,s)=>{s.json({success:!0,data:"Hello World! Git Flow Demo API",message:"Welcome to the demo application"})}),a.get("/api/users",async(e,s)=>{try{const e={success:!0,data:await c.getAllUsers(),message:"Users retrieved successfully"};s.json(e)}catch(e){const t={success:!1,data:null,message:"Failed to retrieve users",error:e instanceof Error?e.message:"Unknown error"};s.status(500).json(t)}}),a.get("/api/users/:id",async(e,s)=>{try{const t=parseInt(e.params.id),r=await c.getUserById(t);if(!r){const e={success:!1,data:null,message:"User not found"};return void s.status(404).json(e)}const o={success:!0,data:r,message:"User retrieved successfully"};s.json(o)}catch(e){const t={success:!1,data:null,message:"Failed to retrieve user",error:e instanceof Error?e.message:"Unknown error"};s.status(500).json(t)}}),a.listen(i,()=>{console.log(`ðŸš€ Server running at http://localhost:${i}`),console.log("ðŸ“‹ Available endpoints:"),console.log("  GET / - Welcome message"),console.log("  GET /api/users - Get all users"),console.log("  GET /api/users/:id - Get user by ID")}),s.default=a},252:e=>{e.exports=require("express")},755:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.UserService=void 0,s.UserService=class{constructor(){this.users=[{id:1,name:"John Doe",email:"john.doe@example.com",createdAt:new Date("2024-01-01"),isActive:!0},{id:2,name:"Jane Smith",email:"jane.smith@example.com",createdAt:new Date("2024-01-02"),isActive:!0},{id:3,name:"Bob Johnson",email:"bob.johnson@example.com",createdAt:new Date("2024-01-03"),isActive:!1}]}async getAllUsers(){return new Promise(e=>{setTimeout(()=>e([...this.users]),100)})}async getUserById(e){return new Promise(s=>{setTimeout(()=>{const t=this.users.find(s=>s.id===e);s(t||null)},100)})}async createUser(e){return new Promise(s=>{setTimeout(()=>{const t={id:Math.max(...this.users.map(e=>e.id))+1,createdAt:new Date,...e};this.users.push(t),s(t)},100)})}async updateUser(e,s){return new Promise(t=>{setTimeout(()=>{const r=this.users.findIndex(s=>s.id===e);-1!==r?(this.users[r]={...this.users[r],...s},t(this.users[r])):t(null)},100)})}async deleteUser(e){return new Promise(s=>{setTimeout(()=>{const t=this.users.findIndex(s=>s.id===e);-1!==t?(this.users.splice(t,1),s(!0)):s(!1)},100)})}}}},s={};!function t(r){var o=s[r];if(void 0!==o)return o.exports;var n=s[r]={exports:{}};return e[r].call(n.exports,n,n.exports,t),n.exports}(156)})();